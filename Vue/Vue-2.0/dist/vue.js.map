{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["/**\r\n * 1.通过遍历html字符串利用正则匹配开始、文本、结束标签\r\n * 2.每匹配一个字符串就将解析的结果通过ast处理函数处理为ast树形结构\r\n * 3.每解析完一个标签，在html字符串中删除\r\n * 4.ast属性结构的函数处理\r\n *    通过栈的方式储存父节点，父节点始终在栈的最底层\r\n */\r\n\r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n//匹配的分组时标签名\r\nconst startTagopen = new RegExp(`^<${qnameCapture}`);\r\n//结束标签</XXX>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n//第一组匹配key value匹配 分组3、4、5\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\nconst startTagclose = /^\\s*(\\/?)>/;\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //匹配的 {{XXX}} 表达式\r\n\r\n// 边解析边删除已解析的模板\r\nfunction parseHTML(html) {\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  const stack = []; //用来放元素\r\n  let currentParent; // 指向栈中的最后一个\r\n  let root;\r\n\r\n  // 其中的一个节点\r\nfunction createASTElement(tag, attrs) {\r\n  return {\r\n    tag,\r\n    type: ELEMENT_TYPE,\r\n    children:[],\r\n    attrs,\r\n    parent:null\r\n  }\r\n}\r\n\r\n  // 最终转换为抽象语法树\r\n  function start (tag, attrs){\r\n    let node =  createASTElement(tag, attrs);\r\n    if(!root){ //判断是否为根节点\r\n      root = node;\r\n    }\r\n    if(currentParent){\r\n      // 储存当前节点的父元素，并将节点push进父元素的子栈\r\n      node.parent = currentParent;\r\n      currentParent.children.push(node);\r\n    }\r\n    stack.push(node); \r\n    currentParent = node; // 栈中的最后一个\r\n  }\r\n  function chars (text){\r\n    text = text.replace(/\\s/g,\"\")\r\n    text && currentParent.children.push({\r\n      type:TEXT_TYPE,\r\n      text,\r\n      parent: currentParent\r\n    })\r\n\r\n  }\r\n  function end (){\r\n    stack.pop();\r\n    currentParent = stack[stack.length - 1]\r\n  }\r\n  // 一边解析一边删除已经解析过的html字符串\r\n  function advance(n) {\r\n    html = html.substring(n);\r\n  }\r\n  // 解析开始标签\r\n  function parseStartTag() {\r\n    const start = html.match(startTagopen);\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: [], //标签属性\r\n      };\r\n      advance(start[0].length);\r\n\r\n      let attr, end;\r\n      // 记录属性并删除\r\n      while (\r\n        !(end = html.match(startTagclose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        advance(attr[0].length);\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5],\r\n        });\r\n      }\r\n      if (end) {\r\n        advance(end[0].length);\r\n      }\r\n      return match;\r\n    }\r\n    return false; //不是开始标签就返回\r\n  }\r\n// 循环解析html内容\r\n  while (html) {\r\n    // 如果 indexOf的索引是0，则说明是个开始或者结束标签\r\n    // 如果 indexOf的索引 > 0，则说明时文本的结束位置\r\n    let textEnd = html.indexOf(\"<\");\r\n    if (textEnd == 0) {\r\n      const startTagMatch = parseStartTag(); //开始标签的解析结果\r\n      if(startTagMatch) { //解析到开始标签\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue;\r\n      }\r\n     let endTagMatch =  html.match(endTag);//结束标签；\r\n     if(endTagMatch){\r\n       advance(endTagMatch[0].length);\r\n       end(endTagMatch[0])\r\n       continue;\r\n     }\r\n    }\r\n    if(textEnd > 0){\r\n      let text = html.substring(0, textEnd); //文本内容\r\n      if(text) {\r\n        chars(text);\r\n        advance(text.length) //解析到的文本\r\n      }\r\n      continue;\r\n    }\r\n  }\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n  // 将template 转化成ast语法树\r\n  let ast = parseHTML(template);\r\n  // 生成render方法 （render方法返回结果就是 虚拟dom)\r\n}\r\n","// 重写数组中方法\r\n \r\nlet oldArrayPro = Array.prototype;\r\n\r\n// newArrayProto.__proto__ = oldArrayPro 保证Array的方法不改变\r\nexport let newArrayProto = Object.create(oldArrayPro);\r\n\r\nlet methods = [ //找到所有变异方法\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"reverse\",\r\n    \"sort\",\r\n    \"splice\"\r\n]\r\n\r\nmethods.forEach( method => {\r\n    // 重写数组方法\r\n    newArrayProto[method] = function(...rest){\r\n        //通过调用老的方法  函数劫持，切片编程\r\n       const result = oldArrayPro[method].call(this, ...rest); \r\n    //    新增的数据未被劫持，数据需要再次被劫持\r\n    let inserted;\r\n    let ob = this.__ob__\r\n    switch(method){\r\n        case \"push\":\r\n        case \"unshift\":\r\n            inserted = rest;\r\n            break;\r\n        case \"splice\":\r\n            // 拿到新增的数组数据\r\n            inserted = rest.slice(2)\r\n            break\r\n            default:\r\n                break\r\n    }\r\n    // inserted 数组\r\n    if(inserted){\r\n        //如果有新增则将监听新增的对象\r\n        ob.observeArray(inserted)\r\n    } \r\n       return result;\r\n    }\r\n})","\r\n\r\nimport {newArrayProto} from \"./array\"\r\nclass Observe{\r\n    constructor(data) {\r\n        // Object.definProperty 只能劫持已经存在的属性 (vue 为此单独写api $set $delete);\r\n        // 通过注册数组的索引可以监听变化，但是挂载到实例上会导致过多的属性挂载 影响性能\r\n        // observer实例挂载到data上\r\n         // 如果属性有__ob__ 说明对象被代理过\r\n       Object.defineProperty(data, \"__ob__\", {\r\n        value: this,\r\n        enumerable: false //循环的时候不可枚举\r\n       }) \r\n        // data.__ob__ = this;  直接这样写会被一直代理至死循环\r\n        if(Array.isArray(data)){\r\n            // 监听用户对数组的操作（push shift 。。。)\r\n            // 重写数组变异方法（会改变原数组的方法）\r\n            // 方案 保留原数组特性，重写部分方法 （push shift 。。。)\r\n            data.__proto__ = newArrayProto;\r\n            this.observeArray(data);  // 可以检测到数组中的对象\r\n        }else{\r\n            this.walk(data)\r\n        }\r\n\r\n    }\r\n    walk(data) { //循环注册对象属性（依次劫持属性）\r\n        // 重新定义属性 （—性能瓶颈）\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    // 监测数组的对象\r\n    observeArray(data) {\r\n        // 数组项传入observe时，非对象不会被监测\r\n        data.forEach(item => { observe(item)})\r\n    }\r\n}\r\n// 将数据定义为响应式\r\nexport function defineReactive(target, key, value) { //闭包 属性劫持\r\n    observe(value);\r\n    Object.defineProperty(target, key, {\r\n        get() { \r\n            console.log(key)\r\n            return value\r\n        },\r\n        set(newValue) {\r\n            if(newValue === value) return;\r\n            observe(newValue); //当设置将对象修改时，需要再次劫持\r\n            value =  newValue\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport function observe(data) {\r\n    // 对对象劫持\r\n\r\n    if(typeof data !== \"object\" || data == null){\r\n        return; //只劫持对象\r\n    }\r\n    // 被劫持过了，就不需要劫持 （判断对象是否被劫持，添加实例，用实例判断是否被劫持）\r\n    if(data.__ob__ instanceof Observe){\r\n        return;\r\n    }\r\n    return new Observe(data)\r\n}","import { observe } from \"./observe/index\";\r\n\r\nfunction initState(vm) {\r\n    const opts = vm.$options;\r\n    if(opts.data) {\r\n        // 初始化数据\r\n        initData(vm)\r\n    }\r\n}\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key,{\r\n        // 从_dataz中的数据挂在vm上\r\n        get() {\r\n            return vm[target][key];\r\n        },\r\n        set(newValue) {\r\n            return vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data; //data可能是函数  可能是对象；\r\n    data = typeof data === \"function\" ? data.call(vm) : data;\r\n\r\n    //将data绑定到_data上，方便监测实例的数据改变\r\n    vm._data = data; \r\n    \r\n    // 数据劫持  用defineProperty代理data\r\n    observe(data);\r\n    // vm._data 代理到vm上 方便可以直接取值，且保持vms实例上的data响应式变化 第二次defineProperty\r\n    for(let key in data) {\r\n        proxy(vm, \"_data\", key)\r\n    }\r\n}\r\n\r\nexport { initState, initData }","import { compileToFunction } from \"./compiler/index\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n\r\n    Vue.prototype._init = function(options){\r\n        // vue 指令 vm vm\r\n        const vm = this;\r\n        vm.$options = options;\r\n        // 初始化状态（数据）\r\n        initState(vm);\r\n        if(options.el){\r\n            vm.$mount(options.el) //数据挂载到页面模板\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        if(!ops.render){ //先看是否有render\r\n            let template; //是否有template,没写采用外部el的template\r\n            if(!ops.template && el){\r\n                template = el.outerHTML\r\n\r\n            }else{\r\n                if(el){\r\n                    template = ops.template; //写了template就用template\r\n                }\r\n            }\r\n            if(template){\r\n                const render = compileToFunction(template);\r\n                ops.render = render; //jsx 最终编译程 h(\"xxx\")\r\n            }\r\n        }\r\n        ops.render; //统一使用render方法\r\n        //script 标签引用的vue.gloabal.js 这个编译过程在浏览器运行\r\n        // runtime不包含模板编译，整个编译过程是打包的时候loader来转义.vue文件，用runtime时不能使用 template:\"\"\r\n\r\n    }\r\n}\r\n","\r\nimport { initMixin } from \"./init\"\r\n\r\nfunction Vue(options) {\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue);\r\n\r\nexport default Vue;"],"names":["ncname","qnameCapture","startTagopen","RegExp","endTag","attribute","startTagclose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunction","template","oldArrayPro","Array","prototype","newArrayProto","Object","create","methods","forEach","method","rest","result","call","inserted","ob","__ob__","slice","observeArray","Observe","data","defineProperty","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","get","console","log","set","newValue","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":"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"}